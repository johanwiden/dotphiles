# sway config file (v4)
#
# Read `man 5 sway` for a complete reference.
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# This is the Solarized color palette.
set $base03    #002b36
set $base02    #073642
set $base01    #586e75
set $base00    #657b83
set $base0     #839496
set $base1     #93a1a1
set $base2     #eee8d5
set $base3     #fdf6e3
set $yellow    #b58900
set $orange    #cb4b10
set $red       #dc322f
set $magenta   #d33682
set $violet    #6c71c4
set $blue      #268bd2
set $cyan      #2aa198
set $green     #859900
set $transparent #00000000
set $lucent    #00000088

# Your preferred terminal emulator
set $term foot
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# Notification daemon: apt mako-notifier
# If I start dunst, it may win over mako.
# exec --no-startup-id dunst

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 1170 'notify-send --app-name=screenlockwarning "Screen will lock in 30 seconds"' \
         timeout 1200 '/usr/local/bin/swaylock -f --grace 10 --fade-in 8' \
         timeout 1500 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
# exec swayidle -w \
#          timeout 270 'notify-send --app-name=screenlockwarning "Screen will lock in 30 seconds"' \
#          timeout 300 '/usr/local/bin/swaylock -f --grace 10 --fade-in 8' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 1200 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "type:keyboard" {
    xkb_model pc104
    # xkb_layout us,se,ru
    xkb_layout us,ru
    # xkb_variant altgr-intl,,phonetic
    xkb_variant altgr-intl,phonetic
    xkb_options "grp:rctrl_toggle,ctrl:nocaps"
}

#exec xrdb -override ~/dawesome.xres

# GTK settings
exec --no-startup-id xsettingsd

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# enable window icons for all windows. sway: all not recognized
# for_window [all] title_window_icon on

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
# exec --no-startup-id nm-applet

# Try to control screen blanking
# exec --no-startup-id xset s off dpms 1200 1400 1600

# See https://simpleit.rocks/linux/switch-keyboard-layouts/
# exec --no-startup-id "setxkbmap -model pc104 -layout us,se,ru -variant ,,phonetic -option grp:rctrl_toggle"
# Save keyboard layout and language options in /etc/default/keyboard
# localectl set-x11-keymap us,ru pc105 ,phonetic grp:ctrls_toggle

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
# bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use pamixer to adjust volume in PulseAudio.
bindsym XF86AudioMute          exec --no-startup-id pamixer --toggle-mute
bindsym XF86AudioLowerVolume   exec --no-startup-id pamixer --decrease 5
bindsym XF86AudioRaiseVolume   exec --no-startup-id pamixer --increase 5

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod normal

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag enable

### Key bindings
#
# Basics:
#

# %%hotkey: start a terminal %%
bindsym $mod+Return exec $term
#bindsym $mod+Return exec i3-sensible-terminal

# %%hotkey: kill focused window %%
bindsym $mod+Shift+q kill

# %%hotkey: Start your launcher %%
# bindsym $mod+space exec $menu

set $rofi /usr/local/bin/rofi
# %%hotkey: rofi desktop app launcher %%
bindsym $mod+space exec $rofi -show drun
# %%hotkey: rofi app launcher %%
bindsym $mod+Shift+space exec $rofi -show run
# %%hotkey: rofi switch to X11 window %%
bindsym $mod+Ctrl+space exec $rofi -show window

# Disable focus wrapping
focus_wrapping no

hide_edge_borders both

# %%hotkey: change focus left %%
bindsym $mod+$left focus left
# %%hotkey: change focus down %%
bindsym $mod+$down focus down
# %%hotkey: change focus up %%
bindsym $mod+$up focus up
# %%hotkey: change focus right %%
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
# bindsym $mod+Left focus left
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up
# bindsym $mod+Right focus right

# %%hotkey: move focused window left %%
bindsym $mod+Shift+$left move left
# %%hotkey: move focused window down %%
bindsym $mod+Shift+$down move down
# %%hotkey: move focused window up %%
bindsym $mod+Shift+$up move up
# %%hotkey: move focused window right %%
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
# bindsym $mod+Shift+Left move left
# bindsym $mod+Shift+Down move down
# bindsym $mod+Shift+Up move up
# bindsym $mod+Shift+Right move right

# switch to next/prev workspace
# bindsym $mod+Ctrl+Right workspace next
# bindsym $mod+Ctrl+Left workspace prev

# %%hotkey: split in horizontal orientation %%
bindsym $mod+Shift+v splith

# %%hotkey: split in vertical orientation %%
bindsym $mod+v splitv

# %%hotkey: enter fullscreen mode for the focused container %%
bindsym $mod+f fullscreen toggle

# %%hotkey: change container layout to stacked %%
bindsym $mod+s layout stacking
# %%hotkey: change container layout to tabbed %%
bindsym $mod+t layout tabbed
# %%hotkey: change container layout to toggle split %%
bindsym $mod+Shift+s layout toggle split

# %%hotkey: toggle tiling / floating %%
bindsym $mod+Shift+f floating toggle

# %%hotkey: Swap focus between the tiling area and the floating area %%
bindsym $mod+Shift+t focus mode_toggle

# %%hotkey: focus the parent container %%
bindsym $mod+a focus parent

# %%hotkey: focus the child container %%
bindsym $mod+Shift+a focus child

# %%hotkey: select i3 window %%
# This is already handled by "rofi -show window"
# bindsym $mod+b exec ~/bin/quickswitch-select

# %%hotkey: get wm window names, select one, display at current desktop window %%
bindsym $mod+w exec ~/.local/bin/wm_window_switch swap

# %%hotkey: get wm window names, select one, display next to current desktop window %%
bindsym $mod+Shift+w exec ~/.local/bin/wm_window_switch add

# %%hotkey: get web browser tab titles and URLs, select one, display at current desktop window %%
bindsym $mod+u exec ~/.local/bin/browser_tab swap

# %%hotkey: get web browser tab titles and URLs, select one, display next to current desktop window %%
bindsym $mod+Shift+u exec ~/.local/bin/browser_tab add

# %%hotkey: get current buffers from emacs, select one, display at current desktop window %%
bindsym $mod+b exec ~/.local/bin/emacs_buffers swap

# %%hotkey: get current buffers from emacs, select one, display next to current desktop window %%
bindsym $mod+Shift+b exec ~/.local/bin/emacs_buffers add

# %%hotkey: get recentf list from emacs, select one, display at current desktop window %%
bindsym $mod+r exec ~/.local/bin/emacs_recentf swap

# %%hotkey: get recentf list from emacs, select one, display next to current desktop window %%
bindsym $mod+Shift+r exec ~/.local/bin/emacs_recentf add

# %%hotkey: move the currently focused window to the scratchpad %%
bindsym $mod+Shift+minus move scratchpad

# %%hotkey: Show the next scratchpad window or hide the focused scratchpad window %%
bindsym $mod+minus scratchpad show
# If there are multiple scratchpad windows, this command cycles through them.

# %%hotkey: show i3 keybindings %%
bindsym $mod+question exec ~/bin/hotkeys-sway

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# %%hotkey: reload the configuration file %%
bindsym $mod+Shift+c reload
# hotkey: exit sway (logs you out of your session) %%
# bindsym $mod+Shift+e exit
# bindsym $mod+Shift+e exec "swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'swaymsg exit'"

# Shutdown computer
# bindsym $mod+KP_Subtract exec shutdown now

# lock the screen
#bindsym $mod+Escape exec gnome-screensaver-command --lock
#bindsym $mod+Escape exec i3lock -i /usr/share/backgrounds/Multiverse_by_Emanuele_Santoro.png

# %%hotkey: shortcuts for common system configuration tasks %%
bindsym $mod+c exec gnome-control-center

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10px
        bindsym j resize grow height 10px
        bindsym k resize shrink height 10px
        bindsym l resize grow width 10px

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# %%hotkey: resize window (you can also use the mouse for that) %%
bindsym $mod+p mode "resize"

mode "swap" {
	# switch to workspace
	bindsym $mod+1 workspace $ws1
	bindsym $mod+2 workspace $ws2
	bindsym $mod+3 workspace $ws3
	bindsym $mod+4 workspace $ws4
	bindsym $mod+5 workspace $ws5
	bindsym $mod+6 workspace $ws6
	bindsym $mod+7 workspace $ws7
	bindsym $mod+8 workspace $ws8
	bindsym $mod+9 workspace $ws9
	bindsym $mod+0 workspace $ws10

	# change focus
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right

	# change focus (without mod)
	bindsym Left focus left
	bindsym Down focus down
	bindsym Up focus up
	bindsym Right focus right

	bindsym Return swap container with mark "swapee"; unmark "swapee"; mode "default";
	bindsym Escape unmark "swapee"; mode "default";
}

# %%hotkey: swap two containers %%
bindsym $mod+Shift+i mark --add "swapee"; mode "swap"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command /home/jw/.cargo/bin/i3status-rs /home/jw/.config/i3status-rust/config.toml
#     #status_command i3blocks  2>/tmp/i3blocks.err -vvv | tee /tmp/i3blocks.out
#     #status_command while date +'%Y-%m-%d %I:%M %p'; do sleep 20; done
#     font pango:DejaVu Sans Mono 8
#     # Do not show hidden bar when modifier key is pressed
#     modifier none

#     Colors {
#         background $base03
#         statusline $base1
#         separator  $blue
# #                          BORDER  BACKGROUND TEXT
#         focused_workspace  $base02  $base02  $base2
#         active_workspace   $base02  $base02  $base01
#         inactive_workspace $base03  $base03  $base01
#         urgent_workspace   $red     $red     $base3
#     }
# }
bar {
  swaybar_command waybar
  workspace_buttons yes
  modifier none
}

# set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
set $mode_system System (l) lock, (e) logout, (s) suspend, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id swayexit lock, mode "default"
    bindsym e exec --no-startup-id swayexit logout, mode "default"
    bindsym s exec --no-startup-id swayexit suspend, mode "default"
    # Hibernate does not work with Secure boot
    # bindsym h exec --no-startup-id swayexit hibernate, mode "default"
    bindsym r exec --no-startup-id swayexit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id swayexit shutdown, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# %%hotkey: System (l) lock, (e) logout, (s) suspend, (r) reboot, (Shift+s) shutdown %%
bindsym $mod+Pause mode "$mode_system"

# %%hotkey: bar toggle, hide or show %%
bindsym $mod+m bar mode toggle

# Hide mouse pointer after a period of inactivity.
seat seat0 hide_cursor 5000

# Dynamically update recoll full text search database
exec --no-startup-id /usr/share/recoll/examples/rclmon.sh start

# https://sr.ht/~tsdh/swayr
exec env RUST_BACKTRACE=1 RUST_LOG=swayr=debug swayrd > /tmp/swayrd.log 2>&1

include /etc/sway/config.d/*
